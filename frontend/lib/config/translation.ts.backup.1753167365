/**
 * 全局翻译配置
 * 
 * 统一管理所有翻译服务的配置参数
 */

// 翻译分块配置 - NLLB服务优化版本
export const TRANSLATION_CHUNK_CONFIG = {
  // NLLB服务分块大小：800字符（确保不超过NLLB token限制）
  MAX_CHUNK_SIZE: 200,        // 🔥 进一步减小块大小到200字符，适应NLLB服务响应时间
  
  // 批处理配置 - 与文档翻译保持一致
  BATCH_SIZE: 3,                      // 批次大小：3个块/批次
  
  // 并发处理配置 - 优化长文本处理
  CONCURRENT_BATCHES: 1,              // 🔥 并发批次数：1（避免NLLB服务过载）
  CONCURRENT_BATCH_DELAY: 2000,       // 🔥 批次间延迟：2秒（与文档翻译一致）
  MAX_CONCURRENT_REQUESTS: 2,         // 🔥 最大并发请求：2个（与文档翻译一致）
  
  // 重试配置 - 增强稳定性
  MAX_RETRIES: 5,             // 🔥 增加到5次重试，提高成功率
  RETRY_DELAY: 2000,          // 🔥 增加重试延迟到2秒，给NLLB服务更多恢复时间
  
  // 延迟配置 - 避免NLLB服务限流，与文档翻译保持一致
  CHUNK_DELAY: 500,           // 块间延迟：500ms
  BATCH_DELAY: 2000,          // 🔥 批次间延迟：2秒（与文档翻译一致）
  
  // 超时配置
  REQUEST_TIMEOUT: 30000,     // 🔥 调整请求超时到30秒，基于NLLB服务实际响应时间
  
  // 并发控制
  CONCURRENT_CHUNKS: 1        // 顺序处理，避免限流
};

// 不同场景的分块策略 - 考虑NLLB服务限制
export const CHUNK_STRATEGIES = {
  // 短文本：直接翻译，不分块
  SHORT_TEXT: {
    MAX_LENGTH: 500,
    CHUNK_SIZE: 500
  },
  
  // 中等文本：适中分块
  MEDIUM_TEXT: {
    MAX_LENGTH: 1500,
    CHUNK_SIZE: 600
  },
  
  // 长文本：较大分块
  LONG_TEXT: {
    MAX_LENGTH: 3000,
    CHUNK_SIZE: 800
  },
  
  // 超长文本：最大分块（不超过NLLB限制）
  EXTRA_LONG_TEXT: {
    CHUNK_SIZE: 800  // 保持800字符，确保NLLB服务稳定性
  }
};

// 根据文本长度选择最佳分块策略
export function getOptimalChunkSize(textLength: number): number {
  if (textLength <= CHUNK_STRATEGIES.SHORT_TEXT.MAX_LENGTH) {
    return CHUNK_STRATEGIES.SHORT_TEXT.CHUNK_SIZE;
  } else if (textLength <= CHUNK_STRATEGIES.MEDIUM_TEXT.MAX_LENGTH) {
    return CHUNK_STRATEGIES.MEDIUM_TEXT.CHUNK_SIZE;
  } else if (textLength <= CHUNK_STRATEGIES.LONG_TEXT.MAX_LENGTH) {
    return CHUNK_STRATEGIES.LONG_TEXT.CHUNK_SIZE;
  } else {
    return CHUNK_STRATEGIES.EXTRA_LONG_TEXT.CHUNK_SIZE;
  }
}

// 预估分块数量
export function estimateChunkCount(textLength: number): number {
  const chunkSize = getOptimalChunkSize(textLength);
  return Math.ceil(textLength / chunkSize);
}

// 预估处理时间（秒）
export function estimateProcessingTime(textLength: number): number {
  const chunkCount = estimateChunkCount(textLength);
  const batchCount = Math.ceil(chunkCount / TRANSLATION_CHUNK_CONFIG.BATCH_SIZE);
  
  // 基础时间：每个块5秒 + 批次间延迟 + 网络延迟
  const baseTime = chunkCount * 5;
  const batchDelay = batchCount * (TRANSLATION_CHUNK_CONFIG.BATCH_DELAY / 1000);
  const networkDelay = chunkCount * 2; // 每个块2秒网络延迟
  
  return Math.ceil(baseTime + batchDelay + networkDelay);
}

console.log('翻译配置说明:');
console.log('- 分块大小: 800字符（确保NLLB token安全）');
console.log('- 10000字符: 约13个块');
console.log('- 批处理大小: 3个块');
console.log('- 块间延迟: 200ms');
console.log('- 批次间延迟: 400ms');
