
// 文档缓存问题修复补丁
// 应用到: frontend/app/api/document/translate/route.ts

// 1. 在文件顶部添加持久化缓存支持
import fs from 'fs';
import path from 'path';

const CACHE_FILE = path.join(process.cwd(), 'temp', 'document-cache.json');

// 2. 替换缓存获取逻辑
const documentCache = (global as any).documentCache || loadCache();
if (!(global as any).documentCache) {
  (global as any).documentCache = documentCache;
}

// 3. 在文档未找到时尝试恢复
if (!documentData) {
  console.log('[Translation Debug] 尝试从持久化缓存恢复文档:', fileId);
  
  // 重新加载缓存
  const freshCache = loadCache();
  const recoveredData = freshCache.get(fileId);
  
  if (recoveredData && (!recoveredData.expiresAt || new Date() <= new Date(recoveredData.expiresAt))) {
    documentCache.set(fileId, recoveredData);
    console.log('[Translation Debug] 文档恢复成功:', fileId);
    // 继续处理...
  } else {
    console.log('[Translation Debug] 文档无法恢复，建议重新上传');
    return NextResponse.json({
      error: '文档不存在或已过期',
      code: 'DOCUMENT_NOT_FOUND',
      details: '请重新上传文件。如果刚刚上传，请稍等片刻后重试。',
      suggestion: '建议刷新页面后重新上传文档'
    }, { status: 404 });
  }
}

// 4. 在成功处理后保存缓存
// 在翻译完成后调用
saveCache(documentCache);
